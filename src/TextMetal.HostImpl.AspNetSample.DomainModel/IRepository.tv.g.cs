//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by:
// TextMetal 5.0.6.35568;
// 		Copyright ©2002-2014 Daniel Bullington (dpbullington@gmail.com)
//		Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
//		Project URL: https://github.com/dpbullington/textmetal
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------

/*
	Copyright ©2002-2014 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Linq;
using System.Linq;
using System.Xml;

using TextMetal.Common.Core;
using TextMetal.Common.Data;
using TextMetal.Common.Data.LinqToSql;

using TextMetal.HostImpl.AspNetSample.DomainModel.Tables;
using TextMetal.HostImpl.AspNetSample.DomainModel.Views;

namespace TextMetal.HostImpl.AspNetSample.DomainModel
{
	public partial interface IRepository
	{		
		#region Methods/Operators
		
		UserHistory LoadUserHistory(Int64 @userHistoryId);

		UserHistory LoadUserHistory(IUnitOfWork unitOfWork, Int64 @userHistoryId);
						
		IEnumerable<UserHistory> FindUserHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>> callback);
		
		IEnumerable<UserHistory> FindUserHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>> callback);
		
		bool SaveUserHistory(UserHistory @userHistory);
		
		bool SaveUserHistory(IUnitOfWork unitOfWork, UserHistory @userHistory);
		
		bool DiscardUserHistory(UserHistory @userHistory);
		
		bool DiscardUserHistory(IUnitOfWork unitOfWork, UserHistory @userHistory);

		PropertyBagHistory LoadPropertyBagHistory(Int64 @propertyBagHistoryId);

		PropertyBagHistory LoadPropertyBagHistory(IUnitOfWork unitOfWork, Int64 @propertyBagHistoryId);
						
		IEnumerable<PropertyBagHistory> FindPropertyBagHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>> callback);
		
		IEnumerable<PropertyBagHistory> FindPropertyBagHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>> callback);
		
		bool SavePropertyBagHistory(PropertyBagHistory @propertyBagHistory);
		
		bool SavePropertyBagHistory(IUnitOfWork unitOfWork, PropertyBagHistory @propertyBagHistory);
		
		bool DiscardPropertyBagHistory(PropertyBagHistory @propertyBagHistory);
		
		bool DiscardPropertyBagHistory(IUnitOfWork unitOfWork, PropertyBagHistory @propertyBagHistory);

		EventLogHistory LoadEventLogHistory(Int64 @eventLogHistoryId);

		EventLogHistory LoadEventLogHistory(IUnitOfWork unitOfWork, Int64 @eventLogHistoryId);
						
		IEnumerable<EventLogHistory> FindEventLogHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>> callback);
		
		IEnumerable<EventLogHistory> FindEventLogHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>> callback);
		
		bool SaveEventLogHistory(EventLogHistory @eventLogHistory);
		
		bool SaveEventLogHistory(IUnitOfWork unitOfWork, EventLogHistory @eventLogHistory);
		
		bool DiscardEventLogHistory(EventLogHistory @eventLogHistory);
		
		bool DiscardEventLogHistory(IUnitOfWork unitOfWork, EventLogHistory @eventLogHistory);

		EmailMessageHistory LoadEmailMessageHistory(Int64 @emailMessageHistoryId);

		EmailMessageHistory LoadEmailMessageHistory(IUnitOfWork unitOfWork, Int64 @emailMessageHistoryId);
						
		IEnumerable<EmailMessageHistory> FindEmailMessageHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>> callback);
		
		IEnumerable<EmailMessageHistory> FindEmailMessageHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>> callback);
		
		bool SaveEmailMessageHistory(EmailMessageHistory @emailMessageHistory);
		
		bool SaveEmailMessageHistory(IUnitOfWork unitOfWork, EmailMessageHistory @emailMessageHistory);
		
		bool DiscardEmailMessageHistory(EmailMessageHistory @emailMessageHistory);
		
		bool DiscardEmailMessageHistory(IUnitOfWork unitOfWork, EmailMessageHistory @emailMessageHistory);

		EmailAttachmentHistory LoadEmailAttachmentHistory(Int64 @emailAttachmentHistoryId);

		EmailAttachmentHistory LoadEmailAttachmentHistory(IUnitOfWork unitOfWork, Int64 @emailAttachmentHistoryId);
						
		IEnumerable<EmailAttachmentHistory> FindEmailAttachmentHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>> callback);
		
		IEnumerable<EmailAttachmentHistory> FindEmailAttachmentHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>> callback);
		
		bool SaveEmailAttachmentHistory(EmailAttachmentHistory @emailAttachmentHistory);
		
		bool SaveEmailAttachmentHistory(IUnitOfWork unitOfWork, EmailAttachmentHistory @emailAttachmentHistory);
		
		bool DiscardEmailAttachmentHistory(EmailAttachmentHistory @emailAttachmentHistory);
		
		bool DiscardEmailAttachmentHistory(IUnitOfWork unitOfWork, EmailAttachmentHistory @emailAttachmentHistory);
		EventLogExtent LoadEventLogExtent(DateTime @minCreationTimestamp, Int32 @avgDifferenceTimestamps, DateTime @maxModificationTimestamp);

		EventLogExtent LoadEventLogExtent(IUnitOfWork unitOfWork, DateTime @minCreationTimestamp, Int32 @avgDifferenceTimestamps, DateTime @maxModificationTimestamp);
						
		IEnumerable<EventLogExtent> FindEventLogExtents(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>> callback);
		
		IEnumerable<EventLogExtent> FindEventLogExtents(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>> callback);
		
		bool SaveEventLogExtent(EventLogExtent @eventLogExtent);
		
		bool SaveEventLogExtent(IUnitOfWork unitOfWork, EventLogExtent @eventLogExtent);
		
		bool DiscardEventLogExtent(EventLogExtent @eventLogExtent);
		
		bool DiscardEventLogExtent(IUnitOfWork unitOfWork, EventLogExtent @eventLogExtent);
		User LoadUser(Int32 @userId);

		User LoadUser(IUnitOfWork unitOfWork, Int32 @userId);
						
		IEnumerable<User> FindUsers(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>> callback);
		
		IEnumerable<User> FindUsers(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>> callback);
		
		bool SaveUser(User @user);
		
		bool SaveUser(IUnitOfWork unitOfWork, User @user);
		
		bool DiscardUser(User @user);
		
		bool DiscardUser(IUnitOfWork unitOfWork, User @user);

		PropertyBag LoadPropertyBag(Int32 @propertyBagId);

		PropertyBag LoadPropertyBag(IUnitOfWork unitOfWork, Int32 @propertyBagId);
						
		IEnumerable<PropertyBag> FindPropertyBags(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>> callback);
		
		IEnumerable<PropertyBag> FindPropertyBags(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>> callback);
		
		bool SavePropertyBag(PropertyBag @propertyBag);
		
		bool SavePropertyBag(IUnitOfWork unitOfWork, PropertyBag @propertyBag);
		
		bool DiscardPropertyBag(PropertyBag @propertyBag);
		
		bool DiscardPropertyBag(IUnitOfWork unitOfWork, PropertyBag @propertyBag);

		EventLog LoadEventLog(Int32 @eventLogId);

		EventLog LoadEventLog(IUnitOfWork unitOfWork, Int32 @eventLogId);
						
		IEnumerable<EventLog> FindEventLogs(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>> callback);
		
		IEnumerable<EventLog> FindEventLogs(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>> callback);
		
		bool SaveEventLog(EventLog @eventLog);
		
		bool SaveEventLog(IUnitOfWork unitOfWork, EventLog @eventLog);
		
		bool DiscardEventLog(EventLog @eventLog);
		
		bool DiscardEventLog(IUnitOfWork unitOfWork, EventLog @eventLog);

		EmailMessage LoadEmailMessage(Int32 @emailMessageId);

		EmailMessage LoadEmailMessage(IUnitOfWork unitOfWork, Int32 @emailMessageId);
						
		IEnumerable<EmailMessage> FindEmailMessages(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>> callback);
		
		IEnumerable<EmailMessage> FindEmailMessages(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>> callback);
		
		bool SaveEmailMessage(EmailMessage @emailMessage);
		
		bool SaveEmailMessage(IUnitOfWork unitOfWork, EmailMessage @emailMessage);
		
		bool DiscardEmailMessage(EmailMessage @emailMessage);
		
		bool DiscardEmailMessage(IUnitOfWork unitOfWork, EmailMessage @emailMessage);

		EmailAttachment LoadEmailAttachment(Int32 @emailMessageId);

		EmailAttachment LoadEmailAttachment(IUnitOfWork unitOfWork, Int32 @emailMessageId);
						
		IEnumerable<EmailAttachment> FindEmailAttachments(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>> callback);
		
		IEnumerable<EmailAttachment> FindEmailAttachments(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>> callback);
		
		bool SaveEmailAttachment(EmailAttachment @emailAttachment);
		
		bool SaveEmailAttachment(IUnitOfWork unitOfWork, EmailAttachment @emailAttachment);
		
		bool DiscardEmailAttachment(EmailAttachment @emailAttachment);
		
		bool DiscardEmailAttachment(IUnitOfWork unitOfWork, EmailAttachment @emailAttachment);
		TabWithPrimaryKeyAsIdentity LoadTabWithPrimaryKeyAsIdentity(Int32 @colIntIdPk);

		TabWithPrimaryKeyAsIdentity LoadTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, Int32 @colIntIdPk);
						
		IEnumerable<TabWithPrimaryKeyAsIdentity> FindTabWithPrimaryKeyAsIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsIdentity>> callback);
		
		IEnumerable<TabWithPrimaryKeyAsIdentity> FindTabWithPrimaryKeyAsIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsIdentity>> callback);
		
		bool SaveTabWithPrimaryKeyAsIdentity(TabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool SaveTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool DiscardTabWithPrimaryKeyAsIdentity(TabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool DiscardTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);

		TabWithPrimaryKeyAsDefault LoadTabWithPrimaryKeyAsDefault(Guid @colUuidDfPk);

		TabWithPrimaryKeyAsDefault LoadTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, Guid @colUuidDfPk);
						
		IEnumerable<TabWithPrimaryKeyAsDefault> FindTabWithPrimaryKeyAsDefaults(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsDefault>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsDefault>> callback);
		
		IEnumerable<TabWithPrimaryKeyAsDefault> FindTabWithPrimaryKeyAsDefaults(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsDefault>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyAsDefault>> callback);
		
		bool SaveTabWithPrimaryKeyAsDefault(TabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool SaveTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, TabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool DiscardTabWithPrimaryKeyAsDefault(TabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool DiscardTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, TabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);

		TabWithPrimaryKeyWithDifferentIdentity LoadTabWithPrimaryKeyWithDifferentIdentity(Int32 @colIntPk);

		TabWithPrimaryKeyWithDifferentIdentity LoadTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk);
						
		IEnumerable<TabWithPrimaryKeyWithDifferentIdentity> FindTabWithPrimaryKeyWithDifferentIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyWithDifferentIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyWithDifferentIdentity>> callback);
		
		IEnumerable<TabWithPrimaryKeyWithDifferentIdentity> FindTabWithPrimaryKeyWithDifferentIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyWithDifferentIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyWithDifferentIdentity>> callback);
		
		bool SaveTabWithPrimaryKeyWithDifferentIdentity(TabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool SaveTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool DiscardTabWithPrimaryKeyWithDifferentIdentity(TabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool DiscardTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);

		TabWithNoPrimaryKeyWithIdentity LoadTabWithNoPrimaryKeyWithIdentity(Int32 @colIntId, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);

		TabWithNoPrimaryKeyWithIdentity LoadTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, Int32 @colIntId, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);
						
		IEnumerable<TabWithNoPrimaryKeyWithIdentity> FindTabWithNoPrimaryKeyWithIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithNoPrimaryKeyWithIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithNoPrimaryKeyWithIdentity>> callback);
		
		IEnumerable<TabWithNoPrimaryKeyWithIdentity> FindTabWithNoPrimaryKeyWithIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithNoPrimaryKeyWithIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithNoPrimaryKeyWithIdentity>> callback);
		
		bool SaveTabWithNoPrimaryKeyWithIdentity(TabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool SaveTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, TabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool DiscardTabWithNoPrimaryKeyWithIdentity(TabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool DiscardTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, TabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);

		TabWithPrimaryKeyNoIdentity LoadTabWithPrimaryKeyNoIdentity(Int32 @colIntPk);

		TabWithPrimaryKeyNoIdentity LoadTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk);
						
		IEnumerable<TabWithPrimaryKeyNoIdentity> FindTabWithPrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyNoIdentity>> callback);
		
		IEnumerable<TabWithPrimaryKeyNoIdentity> FindTabWithPrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithPrimaryKeyNoIdentity>> callback);
		
		bool SaveTabWithPrimaryKeyNoIdentity(TabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool SaveTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool DiscardTabWithPrimaryKeyNoIdentity(TabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool DiscardTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);

		TabNoPrimaryKeyNoIdentity LoadTabNoPrimaryKeyNoIdentity(Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);

		TabNoPrimaryKeyNoIdentity LoadTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);
						
		IEnumerable<TabNoPrimaryKeyNoIdentity> FindTabNoPrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabNoPrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabNoPrimaryKeyNoIdentity>> callback);
		
		IEnumerable<TabNoPrimaryKeyNoIdentity> FindTabNoPrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabNoPrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabNoPrimaryKeyNoIdentity>> callback);
		
		bool SaveTabNoPrimaryKeyNoIdentity(TabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool SaveTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool DiscardTabNoPrimaryKeyNoIdentity(TabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool DiscardTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);

		TabWithCompositePrimaryKeyNoIdentity LoadTabWithCompositePrimaryKeyNoIdentity(Int32 @colIntPk0, Int32 @colIntPk1, Int32 @colIntPk2, Int32 @colIntPk3);

		TabWithCompositePrimaryKeyNoIdentity LoadTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk0, Int32 @colIntPk1, Int32 @colIntPk2, Int32 @colIntPk3);
						
		IEnumerable<TabWithCompositePrimaryKeyNoIdentity> FindTabWithCompositePrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithCompositePrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithCompositePrimaryKeyNoIdentity>> callback);
		
		IEnumerable<TabWithCompositePrimaryKeyNoIdentity> FindTabWithCompositePrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithCompositePrimaryKeyNoIdentity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.TabWithCompositePrimaryKeyNoIdentity>> callback);
		
		bool SaveTabWithCompositePrimaryKeyNoIdentity(TabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool SaveTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool DiscardTabWithCompositePrimaryKeyNoIdentity(TabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool DiscardTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, TabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);

		#endregion
	}
}
