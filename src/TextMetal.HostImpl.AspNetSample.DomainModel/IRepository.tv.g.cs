//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by:
// TextMetal 6.0.0.29228;
// 		Copyright ©2002-2014 Daniel Bullington (dpbullington@gmail.com)
//		Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
//		Project URL: https://github.com/dpbullington/textmetal
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------

/*
	Copyright ©2002-2014 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Linq;
using System.Linq;
using System.Xml;

using TextMetal.Common.Core;
using TextMetal.Common.Data;
using TextMetal.Common.Data.Framework;
using TextMetal.Common.Data.Framework.LinqToSql;

using TextMetal.HostImpl.AspNetSample.DomainModel.Tables;
using TextMetal.HostImpl.AspNetSample.DomainModel.Views;

namespace TextMetal.HostImpl.AspNetSample.DomainModel
{
	public partial interface IRepository
	{		
		#region Methods/Operators
		
		IOrganization LoadOrganization(Int32 @organizationId);

		IOrganization LoadOrganization(IUnitOfWork unitOfWork, Int32 @organizationId);
						
		IEnumerable<IOrganization> FindOrganizations(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Organization>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Organization>> callback);
		
		IEnumerable<IOrganization> FindOrganizations(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Organization>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Organization>> callback);
		
		bool SaveOrganization(IOrganization @organization);
		
		bool SaveOrganization(IUnitOfWork unitOfWork, IOrganization @organization);
		
		bool DiscardOrganization(IOrganization @organization);
		
		bool DiscardOrganization(IUnitOfWork unitOfWork, IOrganization @organization);

		IMember LoadMember(Int32 @memberId);

		IMember LoadMember(IUnitOfWork unitOfWork, Int32 @memberId);
						
		IEnumerable<IMember> FindMembers(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Member>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Member>> callback);
		
		IEnumerable<IMember> FindMembers(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Member>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Member>> callback);
		
		bool SaveMember(IMember @member);
		
		bool SaveMember(IUnitOfWork unitOfWork, IMember @member);
		
		bool DiscardMember(IMember @member);
		
		bool DiscardMember(IUnitOfWork unitOfWork, IMember @member);
		IEventLogExtent LoadEventLogExtent(DateTime @minCreationTimestamp, Int32 @avgDifferenceTimestamps, DateTime @maxModificationTimestamp);

		IEventLogExtent LoadEventLogExtent(IUnitOfWork unitOfWork, DateTime @minCreationTimestamp, Int32 @avgDifferenceTimestamps, DateTime @maxModificationTimestamp);
						
		IEnumerable<IEventLogExtent> FindEventLogExtents(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>> callback);
		
		IEnumerable<IEventLogExtent> FindEventLogExtents(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogExtent>> callback);
		
		bool SaveEventLogExtent(IEventLogExtent @eventLogExtent);
		
		bool SaveEventLogExtent(IUnitOfWork unitOfWork, IEventLogExtent @eventLogExtent);
		
		bool DiscardEventLogExtent(IEventLogExtent @eventLogExtent);
		
		bool DiscardEventLogExtent(IUnitOfWork unitOfWork, IEventLogExtent @eventLogExtent);
		IUser LoadUser(Int32 @userId);

		IUser LoadUser(IUnitOfWork unitOfWork, Int32 @userId);
						
		IEnumerable<IUser> FindUsers(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>> callback);
		
		IEnumerable<IUser> FindUsers(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.User>> callback);
		
		bool SaveUser(IUser @user);
		
		bool SaveUser(IUnitOfWork unitOfWork, IUser @user);
		
		bool DiscardUser(IUser @user);
		
		bool DiscardUser(IUnitOfWork unitOfWork, IUser @user);

		ISecurityRole LoadSecurityRole(Int32 @securityRoleId);

		ISecurityRole LoadSecurityRole(IUnitOfWork unitOfWork, Int32 @securityRoleId);
						
		IEnumerable<ISecurityRole> FindSecurityRoles(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRole>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRole>> callback);
		
		IEnumerable<ISecurityRole> FindSecurityRoles(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRole>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRole>> callback);
		
		bool SaveSecurityRole(ISecurityRole @securityRole);
		
		bool SaveSecurityRole(IUnitOfWork unitOfWork, ISecurityRole @securityRole);
		
		bool DiscardSecurityRole(ISecurityRole @securityRole);
		
		bool DiscardSecurityRole(IUnitOfWork unitOfWork, ISecurityRole @securityRole);

		IPropertyBag LoadPropertyBag(Int32 @propertyBagId);

		IPropertyBag LoadPropertyBag(IUnitOfWork unitOfWork, Int32 @propertyBagId);
						
		IEnumerable<IPropertyBag> FindPropertyBags(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>> callback);
		
		IEnumerable<IPropertyBag> FindPropertyBags(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBag>> callback);
		
		bool SavePropertyBag(IPropertyBag @propertyBag);
		
		bool SavePropertyBag(IUnitOfWork unitOfWork, IPropertyBag @propertyBag);
		
		bool DiscardPropertyBag(IPropertyBag @propertyBag);
		
		bool DiscardPropertyBag(IUnitOfWork unitOfWork, IPropertyBag @propertyBag);

		IEventLog LoadEventLog(Int32 @eventLogId);

		IEventLog LoadEventLog(IUnitOfWork unitOfWork, Int32 @eventLogId);
						
		IEnumerable<IEventLog> FindEventLogs(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>> callback);
		
		IEnumerable<IEventLog> FindEventLogs(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLog>> callback);
		
		bool SaveEventLog(IEventLog @eventLog);
		
		bool SaveEventLog(IUnitOfWork unitOfWork, IEventLog @eventLog);
		
		bool DiscardEventLog(IEventLog @eventLog);
		
		bool DiscardEventLog(IUnitOfWork unitOfWork, IEventLog @eventLog);

		IEmailMessage LoadEmailMessage(Int32 @emailMessageId);

		IEmailMessage LoadEmailMessage(IUnitOfWork unitOfWork, Int32 @emailMessageId);
						
		IEnumerable<IEmailMessage> FindEmailMessages(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>> callback);
		
		IEnumerable<IEmailMessage> FindEmailMessages(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessage>> callback);
		
		bool SaveEmailMessage(IEmailMessage @emailMessage);
		
		bool SaveEmailMessage(IUnitOfWork unitOfWork, IEmailMessage @emailMessage);
		
		bool DiscardEmailMessage(IEmailMessage @emailMessage);
		
		bool DiscardEmailMessage(IUnitOfWork unitOfWork, IEmailMessage @emailMessage);

		IEmailAttachment LoadEmailAttachment(Int32 @emailMessageId);

		IEmailAttachment LoadEmailAttachment(IUnitOfWork unitOfWork, Int32 @emailMessageId);
						
		IEnumerable<IEmailAttachment> FindEmailAttachments(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>> callback);
		
		IEnumerable<IEmailAttachment> FindEmailAttachments(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachment>> callback);
		
		bool SaveEmailAttachment(IEmailAttachment @emailAttachment);
		
		bool SaveEmailAttachment(IUnitOfWork unitOfWork, IEmailAttachment @emailAttachment);
		
		bool DiscardEmailAttachment(IEmailAttachment @emailAttachment);
		
		bool DiscardEmailAttachment(IUnitOfWork unitOfWork, IEmailAttachment @emailAttachment);
		IOrganizationHistory LoadOrganizationHistory(Int64 @organizationHistoryId);

		IOrganizationHistory LoadOrganizationHistory(IUnitOfWork unitOfWork, Int64 @organizationHistoryId);
						
		IEnumerable<IOrganizationHistory> FindOrganizationHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.OrganizationHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.OrganizationHistory>> callback);
		
		IEnumerable<IOrganizationHistory> FindOrganizationHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.OrganizationHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.OrganizationHistory>> callback);
		
		bool SaveOrganizationHistory(IOrganizationHistory @organizationHistory);
		
		bool SaveOrganizationHistory(IUnitOfWork unitOfWork, IOrganizationHistory @organizationHistory);
		
		bool DiscardOrganizationHistory(IOrganizationHistory @organizationHistory);
		
		bool DiscardOrganizationHistory(IUnitOfWork unitOfWork, IOrganizationHistory @organizationHistory);

		IMemberHistory LoadMemberHistory(Int64 @memberHistoryId);

		IMemberHistory LoadMemberHistory(IUnitOfWork unitOfWork, Int64 @memberHistoryId);
						
		IEnumerable<IMemberHistory> FindMemberHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.MemberHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.MemberHistory>> callback);
		
		IEnumerable<IMemberHistory> FindMemberHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.MemberHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.MemberHistory>> callback);
		
		bool SaveMemberHistory(IMemberHistory @memberHistory);
		
		bool SaveMemberHistory(IUnitOfWork unitOfWork, IMemberHistory @memberHistory);
		
		bool DiscardMemberHistory(IMemberHistory @memberHistory);
		
		bool DiscardMemberHistory(IUnitOfWork unitOfWork, IMemberHistory @memberHistory);

		IUserHistory LoadUserHistory(Int64 @userHistoryId);

		IUserHistory LoadUserHistory(IUnitOfWork unitOfWork, Int64 @userHistoryId);
						
		IEnumerable<IUserHistory> FindUserHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>> callback);
		
		IEnumerable<IUserHistory> FindUserHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.UserHistory>> callback);
		
		bool SaveUserHistory(IUserHistory @userHistory);
		
		bool SaveUserHistory(IUnitOfWork unitOfWork, IUserHistory @userHistory);
		
		bool DiscardUserHistory(IUserHistory @userHistory);
		
		bool DiscardUserHistory(IUnitOfWork unitOfWork, IUserHistory @userHistory);

		ISecurityRoleHistory LoadSecurityRoleHistory(Int64 @securityRoleHistoryId);

		ISecurityRoleHistory LoadSecurityRoleHistory(IUnitOfWork unitOfWork, Int64 @securityRoleHistoryId);
						
		IEnumerable<ISecurityRoleHistory> FindSecurityRoleHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRoleHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRoleHistory>> callback);
		
		IEnumerable<ISecurityRoleHistory> FindSecurityRoleHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRoleHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.SecurityRoleHistory>> callback);
		
		bool SaveSecurityRoleHistory(ISecurityRoleHistory @securityRoleHistory);
		
		bool SaveSecurityRoleHistory(IUnitOfWork unitOfWork, ISecurityRoleHistory @securityRoleHistory);
		
		bool DiscardSecurityRoleHistory(ISecurityRoleHistory @securityRoleHistory);
		
		bool DiscardSecurityRoleHistory(IUnitOfWork unitOfWork, ISecurityRoleHistory @securityRoleHistory);

		IPropertyBagHistory LoadPropertyBagHistory(Int64 @propertyBagHistoryId);

		IPropertyBagHistory LoadPropertyBagHistory(IUnitOfWork unitOfWork, Int64 @propertyBagHistoryId);
						
		IEnumerable<IPropertyBagHistory> FindPropertyBagHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>> callback);
		
		IEnumerable<IPropertyBagHistory> FindPropertyBagHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.PropertyBagHistory>> callback);
		
		bool SavePropertyBagHistory(IPropertyBagHistory @propertyBagHistory);
		
		bool SavePropertyBagHistory(IUnitOfWork unitOfWork, IPropertyBagHistory @propertyBagHistory);
		
		bool DiscardPropertyBagHistory(IPropertyBagHistory @propertyBagHistory);
		
		bool DiscardPropertyBagHistory(IUnitOfWork unitOfWork, IPropertyBagHistory @propertyBagHistory);

		IEventLogHistory LoadEventLogHistory(Int64 @eventLogHistoryId);

		IEventLogHistory LoadEventLogHistory(IUnitOfWork unitOfWork, Int64 @eventLogHistoryId);
						
		IEnumerable<IEventLogHistory> FindEventLogHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>> callback);
		
		IEnumerable<IEventLogHistory> FindEventLogHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EventLogHistory>> callback);
		
		bool SaveEventLogHistory(IEventLogHistory @eventLogHistory);
		
		bool SaveEventLogHistory(IUnitOfWork unitOfWork, IEventLogHistory @eventLogHistory);
		
		bool DiscardEventLogHistory(IEventLogHistory @eventLogHistory);
		
		bool DiscardEventLogHistory(IUnitOfWork unitOfWork, IEventLogHistory @eventLogHistory);

		IEmailMessageHistory LoadEmailMessageHistory(Int64 @emailMessageHistoryId);

		IEmailMessageHistory LoadEmailMessageHistory(IUnitOfWork unitOfWork, Int64 @emailMessageHistoryId);
						
		IEnumerable<IEmailMessageHistory> FindEmailMessageHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>> callback);
		
		IEnumerable<IEmailMessageHistory> FindEmailMessageHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailMessageHistory>> callback);
		
		bool SaveEmailMessageHistory(IEmailMessageHistory @emailMessageHistory);
		
		bool SaveEmailMessageHistory(IUnitOfWork unitOfWork, IEmailMessageHistory @emailMessageHistory);
		
		bool DiscardEmailMessageHistory(IEmailMessageHistory @emailMessageHistory);
		
		bool DiscardEmailMessageHistory(IUnitOfWork unitOfWork, IEmailMessageHistory @emailMessageHistory);

		IEmailAttachmentHistory LoadEmailAttachmentHistory(Int64 @emailAttachmentHistoryId);

		IEmailAttachmentHistory LoadEmailAttachmentHistory(IUnitOfWork unitOfWork, Int64 @emailAttachmentHistoryId);
						
		IEnumerable<IEmailAttachmentHistory> FindEmailAttachmentHistories(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>> callback);
		
		IEnumerable<IEmailAttachmentHistory> FindEmailAttachmentHistories(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.EmailAttachmentHistory>> callback);
		
		bool SaveEmailAttachmentHistory(IEmailAttachmentHistory @emailAttachmentHistory);
		
		bool SaveEmailAttachmentHistory(IUnitOfWork unitOfWork, IEmailAttachmentHistory @emailAttachmentHistory);
		
		bool DiscardEmailAttachmentHistory(IEmailAttachmentHistory @emailAttachmentHistory);
		
		bool DiscardEmailAttachmentHistory(IUnitOfWork unitOfWork, IEmailAttachmentHistory @emailAttachmentHistory);
		ITabWithPrimaryKeyAsIdentity LoadTabWithPrimaryKeyAsIdentity(Int32 @colIntIdPk);

		ITabWithPrimaryKeyAsIdentity LoadTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, Int32 @colIntIdPk);
						
		IEnumerable<ITabWithPrimaryKeyAsIdentity> FindTabWithPrimaryKeyAsIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_identity>> callback);
		
		IEnumerable<ITabWithPrimaryKeyAsIdentity> FindTabWithPrimaryKeyAsIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_identity>> callback);
		
		bool SaveTabWithPrimaryKeyAsIdentity(ITabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool SaveTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool DiscardTabWithPrimaryKeyAsIdentity(ITabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);
		
		bool DiscardTabWithPrimaryKeyAsIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyAsIdentity @tabWithPrimaryKeyAsIdentity);

		ITabWithPrimaryKeyAsDefault LoadTabWithPrimaryKeyAsDefault(Guid @colUuidDfPk);

		ITabWithPrimaryKeyAsDefault LoadTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, Guid @colUuidDfPk);
						
		IEnumerable<ITabWithPrimaryKeyAsDefault> FindTabWithPrimaryKeyAsDefaults(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_default>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_default>> callback);
		
		IEnumerable<ITabWithPrimaryKeyAsDefault> FindTabWithPrimaryKeyAsDefaults(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_default>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_as_default>> callback);
		
		bool SaveTabWithPrimaryKeyAsDefault(ITabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool SaveTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, ITabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool DiscardTabWithPrimaryKeyAsDefault(ITabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);
		
		bool DiscardTabWithPrimaryKeyAsDefault(IUnitOfWork unitOfWork, ITabWithPrimaryKeyAsDefault @tabWithPrimaryKeyAsDefault);

		ITabWithPrimaryKeyWithDifferentIdentity LoadTabWithPrimaryKeyWithDifferentIdentity(Int32 @colIntPk);

		ITabWithPrimaryKeyWithDifferentIdentity LoadTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk);
						
		IEnumerable<ITabWithPrimaryKeyWithDifferentIdentity> FindTabWithPrimaryKeyWithDifferentIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_with_different_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_with_different_identity>> callback);
		
		IEnumerable<ITabWithPrimaryKeyWithDifferentIdentity> FindTabWithPrimaryKeyWithDifferentIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_with_different_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_with_different_identity>> callback);
		
		bool SaveTabWithPrimaryKeyWithDifferentIdentity(ITabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool SaveTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool DiscardTabWithPrimaryKeyWithDifferentIdentity(ITabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);
		
		bool DiscardTabWithPrimaryKeyWithDifferentIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyWithDifferentIdentity @tabWithPrimaryKeyWithDifferentIdentity);

		ITabWithNoPrimaryKeyWithIdentity LoadTabWithNoPrimaryKeyWithIdentity(Int32 @colIntId, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);

		ITabWithNoPrimaryKeyWithIdentity LoadTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, Int32 @colIntId, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);
						
		IEnumerable<ITabWithNoPrimaryKeyWithIdentity> FindTabWithNoPrimaryKeyWithIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_no_primary_key_with_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_no_primary_key_with_identity>> callback);
		
		IEnumerable<ITabWithNoPrimaryKeyWithIdentity> FindTabWithNoPrimaryKeyWithIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_no_primary_key_with_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_no_primary_key_with_identity>> callback);
		
		bool SaveTabWithNoPrimaryKeyWithIdentity(ITabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool SaveTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, ITabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool DiscardTabWithNoPrimaryKeyWithIdentity(ITabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);
		
		bool DiscardTabWithNoPrimaryKeyWithIdentity(IUnitOfWork unitOfWork, ITabWithNoPrimaryKeyWithIdentity @tabWithNoPrimaryKeyWithIdentity);

		ITabWithPrimaryKeyNoIdentity LoadTabWithPrimaryKeyNoIdentity(Int32 @colIntPk);

		ITabWithPrimaryKeyNoIdentity LoadTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk);
						
		IEnumerable<ITabWithPrimaryKeyNoIdentity> FindTabWithPrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_no_identity>> callback);
		
		IEnumerable<ITabWithPrimaryKeyNoIdentity> FindTabWithPrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_primary_key_no_identity>> callback);
		
		bool SaveTabWithPrimaryKeyNoIdentity(ITabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool SaveTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool DiscardTabWithPrimaryKeyNoIdentity(ITabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);
		
		bool DiscardTabWithPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabWithPrimaryKeyNoIdentity @tabWithPrimaryKeyNoIdentity);

		ITabNoPrimaryKeyNoIdentity LoadTabNoPrimaryKeyNoIdentity(Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);

		ITabNoPrimaryKeyNoIdentity LoadTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int64 @colBigint, Byte[] @colBinary, Boolean @colBit, String @colChar, DateTime @colDate, DateTime @colDatetime, DateTime @colDatetime2, DateTimeOffset @colDatetimeoffset, Decimal @colDecimal, Double @colFloat, Byte[] @colImage, Int32 @colInt, Decimal @colMoney, String @colNchar, String @colNtext, Decimal @colNumeric, String @colNvarchar, Single @colReal, Byte[] @colRowversion, DateTime @colSmalldatetime, Int16 @colSmallint, Decimal @colSmallmoney, Object @colSqlVariant, String @colSysname, String @colText, TimeSpan @colTime, Byte @colTinyint, Guid @colUniqueidentifier, Byte[] @colVarbinary, String @colVarchar, XmlDocument @colXml);
						
		IEnumerable<ITabNoPrimaryKeyNoIdentity> FindTabNoPrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_no_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_no_primary_key_no_identity>> callback);
		
		IEnumerable<ITabNoPrimaryKeyNoIdentity> FindTabNoPrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_no_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_no_primary_key_no_identity>> callback);
		
		bool SaveTabNoPrimaryKeyNoIdentity(ITabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool SaveTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool DiscardTabNoPrimaryKeyNoIdentity(ITabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);
		
		bool DiscardTabNoPrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabNoPrimaryKeyNoIdentity @tabNoPrimaryKeyNoIdentity);

		ITabWithCompositePrimaryKeyNoIdentity LoadTabWithCompositePrimaryKeyNoIdentity(Int32 @colIntPk0, Int32 @colIntPk1, Int32 @colIntPk2, Int32 @colIntPk3);

		ITabWithCompositePrimaryKeyNoIdentity LoadTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, Int32 @colIntPk0, Int32 @colIntPk1, Int32 @colIntPk2, Int32 @colIntPk3);
						
		IEnumerable<ITabWithCompositePrimaryKeyNoIdentity> FindTabWithCompositePrimaryKeyNoIdentities(Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_composite_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_composite_primary_key_no_identity>> callback);
		
		IEnumerable<ITabWithCompositePrimaryKeyNoIdentity> FindTabWithCompositePrimaryKeyNoIdentities(IUnitOfWork unitOfWork, Func<IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_composite_primary_key_no_identity>, IQueryable<TextMetal.HostImpl.AspNetSample.DomainModel.L2S.Tab_with_composite_primary_key_no_identity>> callback);
		
		bool SaveTabWithCompositePrimaryKeyNoIdentity(ITabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool SaveTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool DiscardTabWithCompositePrimaryKeyNoIdentity(ITabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);
		
		bool DiscardTabWithCompositePrimaryKeyNoIdentity(IUnitOfWork unitOfWork, ITabWithCompositePrimaryKeyNoIdentity @tabWithCompositePrimaryKeyNoIdentity);

		#endregion
	}
}
